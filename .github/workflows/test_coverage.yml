name: test_coverage

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GH_PAT}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: '4.1'  # Specify your R version

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Set up TinyTeX
        uses: r-lib/actions/setup-tinytex@v2-branch
      
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}
          restore-keys: ${{ runner.os }}-
      
      - name: Ubuntu config
        run: |
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libudunits2-dev libgdal-dev libgeos-dev libproj-dev libmagick++-dev libavfilter-dev
      
      - name: Install dependencies
        run: |
          install.packages(c("remotes","rcmdcheck"), repos = "https://cloud.r-project.org")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        
      - name: Test coverage
        run: |
          Rscript -e "remotes::install_cran('covr')"
          Rscript -e "covr::codecov(token = Sys.getenv('CODECOV_TOKEN'))"
